#!/usr/bin/python3
from database import *
from datetime import datetime, timedelta
import sys
import yaml
import random

operation = sys.argv[1]
if operation == "create-tables":
    db.create_tables([Team, TeamAccess, Challenge, ChallengeSolve, ChallengeFailure, ScoreAdjustment])
    print("Tables created")

elif operation == "drop-tables":
    if input("Are you sure? Type yes to continue: ") == "yes":
        db.drop_tables([Team, TeamAccess, Challenge, ChallengeSolve, ChallengeFailure, ScoreAdjustment])
        print("Done")
    else:
        print("Okay, nothing happened.")

elif operation == "add-challenge":
    challengefile = sys.argv[2]
    with open(challengefile) as f:
        chal = Challenge.create(**yaml.load(f))
        print("Challenge added with id {}".format(chal.id))

elif operation == "gen-challenge":
    n = int(sys.argv[2])
    for i in range(n):
        name = str(random.randint(0, 999999999))
        chal = Challenge.create(name="Challenge".format(name), category="Generated", description="Lorem ipsum, dolor sit amet. The flag is {}".format(name), points=random.randint(50, 400), flag=name)
        print("Challenge added with id {}".format(chal.id))

elif operation == "gen-team":
    n = int(sys.argv[2])
    chals = list(Challenge.select())
    ctz = datetime.now()
    diff = timedelta(minutes=5)
    for i in range(n):
        name = "Team {}".format(i + 1)
        t = Team.create(name=name, email="none@none.com", affiliation="Autogenerated", eligible=True, key="", email_confirmation_key="autogen", email_confirmed=True)
        t.key = "autogen{}".format(t.id)
        t.save()
        print("Team added with id {}".format(t.id))
        for i in random.sample(chals, 5):
            ChallengeSolve.create(team=t, challenge=i, time=ctz)
            ctz = ctz + (diff * random.randint(-10, 10))

# vim: syntax=python:ft=python
